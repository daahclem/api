{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\donni\\\\Desktop\\\\api\\\\src\\\\components\\\\SingleComic.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, Link } from 'react-router-dom';\nimport ErrorPage from './ErrorPage';\nimport md5 from 'blueimp-md5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst publickey = '3566d8678ffd4f14090725b3e5820164';\nconst privatekey = '732b5371030a1937f9f87a214a07713812ea681c';\nconst ts = new Date().getTime();\nconst stringToHash = ts + privatekey + publickey;\nconst hash = md5(stringToHash);\nconst baseUrl = 'https://gateway.marvel.com:443/v1/public/comics';\nconst url = `${baseUrl}?ts=${ts}&apikey=${publickey}&hash=${hash}`;\nconst SingleCharacter = () => {\n  _s();\n  const [singleComic, setSingleComic] = useState([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const {\n          data\n        } = await axios.get(`${url}&id=${id}`);\n        setSingleComic(data.data.results);\n        setLoading(false);\n      } catch (e) {\n        setLoading(false);\n        setError(true);\n        console.log(e);\n      }\n    }\n    fetchData();\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: error ? /*#__PURE__*/_jsxDEV(ErrorPage, {\n        name: \"Comic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 mb-2 bg-dark text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Single Comic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), singleComic.map(chars => {\n          const {\n            id,\n            title,\n            description\n          } = chars;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"img-thumbnail\",\n                  src: `${chars.thumbnail.path}.${chars.thumbnail.extension}`,\n                  alt: title,\n                  \"aria-label\": \"Comics Logo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Featured Series\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/series/${chars.series.resourceURI.substring(chars.series.resourceURI.lastIndexOf('/')).substring(1)}`,\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-white\",\n                    children: chars.series.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Featured Characters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this), chars.characters.items.map(items => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/characters/${items.resourceURI.substring(items.resourceURI.lastIndexOf('/')).substring(1)}`,\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-white\",\n                        children: items.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 86,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 29\n                    }, this)\n                  }, items.resourceURI, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 27\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(SingleCharacter, \"z8ByhDdXv6kW9xJH0J84x1taiEk=\", false, function () {\n  return [useParams];\n});\n_c = SingleCharacter;\nexport default SingleCharacter;\nvar _c;\n$RefreshReg$(_c, \"SingleCharacter\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","Link","ErrorPage","md5","jsxDEV","_jsxDEV","publickey","privatekey","ts","Date","getTime","stringToHash","hash","baseUrl","url","SingleCharacter","_s","singleComic","setSingleComic","error","setError","loading","setLoading","id","fetchData","data","get","results","e","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","name","className","map","chars","title","description","src","thumbnail","path","extension","alt","to","series","resourceURI","substring","lastIndexOf","characters","items","_c","$RefreshReg$"],"sources":["C:/Users/donni/Desktop/api/src/components/SingleComic.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport ErrorPage from './ErrorPage';\r\nimport md5 from 'blueimp-md5';\r\n\r\nconst publickey = '3566d8678ffd4f14090725b3e5820164';\r\nconst privatekey = '732b5371030a1937f9f87a214a07713812ea681c';\r\nconst ts = new Date().getTime();\r\nconst stringToHash = ts + privatekey + publickey;\r\nconst hash = md5(stringToHash);\r\nconst baseUrl = 'https://gateway.marvel.com:443/v1/public/comics';\r\nconst url = `${baseUrl}?ts=${ts}&apikey=${publickey}&hash=${hash}`;\r\n\r\nconst SingleCharacter = () => {\r\n  const [singleComic, setSingleComic] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const { data } = await axios.get(`${url}&id=${id}`);\r\n        setSingleComic(data.data.results);\r\n        setLoading(false);\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(true);\r\n        console.log(e);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading....</h2>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        {error ? (\r\n          <ErrorPage name=\"Comic\" />\r\n        ) : (\r\n          <div className=\"p-3 mb-2 bg-dark text-white\">\r\n            <h2>Single Comic</h2>\r\n            {singleComic.map((chars) => {\r\n              const { id, title, description } = chars;\r\n              return (\r\n                <div key={id} className=\"container\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                      <h3>{title}</h3>\r\n                      <img\r\n                        className=\"img-thumbnail\"\r\n                        src={`${chars.thumbnail.path}.${chars.thumbnail.extension}`}\r\n                        alt={title}\r\n                        aria-label=\"Comics Logo\"\r\n                      />\r\n                      <p>{description}</p>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                      <h3>Featured Series</h3>\r\n                      <Link\r\n                        to={`/series/${chars.series.resourceURI.substring(\r\n                          chars.series.resourceURI.lastIndexOf('/')\r\n                        ).substring(1)}`}\r\n                      >\r\n                        <p className=\"text-white\">{chars.series.name}</p>\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                      <h3>Featured Characters</h3>\r\n                      {chars.characters.items.map((items) => {\r\n                        return (\r\n                          <div key={items.resourceURI}>\r\n                            <Link\r\n                              to={`/characters/${items.resourceURI.substring(\r\n                                items.resourceURI.lastIndexOf('/')\r\n                              ).substring(1)}`}\r\n                            >\r\n                              <p className=\"text-white\">{items.name}</p>\r\n                            </Link>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SingleCharacter;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}